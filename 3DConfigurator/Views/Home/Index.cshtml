@{
    ViewData["Title"] = "Home Page";
}


<script src="~/js/three/three.js"></script>
<script src="~/js/three/OrbitControls.js"></script>
<script src="~/js/three/GLTFLoader.js"></script>
<script src="~/js/three/OBJLoader.js"></script>
<script>
    var scene = new THREE.Scene();
    scene.background = new THREE.Color( 0xc9c9c9 );
    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);

    var renderer = new THREE.WebGLRenderer();
    renderer.gammaOutput = true;
    renderer.gammaFactor = 2.2;
    renderer.setSize(window.innerWidth, window.innerHeight);
    
    document.body.appendChild(renderer.domElement);

    //resize window
    window.addEventListener('resize', function () {

        var width = window.innerWidth;
        var height = window.innerHeight;
        renderer.setSize(width, height);
        camera.aspect = width / height;
        camera.updateProjectionMatrix();
    })

    controls = new THREE.OrbitControls(camera, renderer.domElement);

   var loader = new THREE.GLTFLoader();



    loader.load(
        // resource URL
        'wwwroot/Objects/bal.gltf',
        // called when resource is loaded
        function (gltf) {

          scene.add( gltf.scene );

		gltf.animations; // Array<THREE.AnimationClip>
		gltf.scene; // THREE.Scene
		gltf.scenes; // Array<THREE.Scene>
		gltf.cameras; // Array<THREE.Camera>
		gltf.asset; // Object

        })

    var objLoader = new THREE.OBJLoader();

    var light = new THREE.PointLight( 0xff0000, 1, 100 );
    light.position.set(5, 5, 5 );
    scene.add( light );

    objLoader.load(
        // resource URL
        'wwwroot/Objects/tree.obj',
        // called when resource is loaded
        function (object) {

          scene.add( object );

		

        })

  
    
    
    //Create the shape
    var geometry = new THREE.BoxGeometry(1, 1, 1);

    // Create Material
      var material = new THREE.MeshBasicMaterial({color: 0xFF0000, wireframe: false});
    var cube = new THREE.Mesh(geometry, material);
  

    //scene.add(cube);
    camera.position.z = 3;


    //logic
    var update = function () {

        //cube.rotation.x +=0.01
        //cube.rotation.y +=0.005
    };

    //Draw  scene
    var render = function () {
        renderer.render(scene, camera)
    

    };

    //run game loop(update, render , repeat)
    var GameLoop = function () {

        requestAnimationFrame(GameLoop);

        update();

        render();
    };

    GameLoop();


</script>
